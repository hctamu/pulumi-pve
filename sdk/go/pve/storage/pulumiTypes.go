// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/hctamu/pulumi-pve/sdk/go/pve/internal"
)

var _ = internal.GetEnvOrDefault

type FileSourceRaw struct {
	// The raw data in []byte
	FileData string `pulumi:"fileData"`
	// The name of the file
	FileName string `pulumi:"fileName"`
}

type FileSourceRawArgs struct {
	// The raw data in []byte
	FileData pulumix.Input[string] `pulumi:"fileData"`
	// The name of the file
	FileName pulumix.Input[string] `pulumi:"fileName"`
}

func (FileSourceRawArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSourceRaw)(nil)).Elem()
}

func (i FileSourceRawArgs) ToFileSourceRawOutput() FileSourceRawOutput {
	return i.ToFileSourceRawOutputWithContext(context.Background())
}

func (i FileSourceRawArgs) ToFileSourceRawOutputWithContext(ctx context.Context) FileSourceRawOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSourceRawOutput)
}

func (i *FileSourceRawArgs) ToOutput(ctx context.Context) pulumix.Output[*FileSourceRawArgs] {
	return pulumix.Val(i)
}

type FileSourceRawOutput struct{ *pulumi.OutputState }

func (FileSourceRawOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSourceRaw)(nil)).Elem()
}

func (o FileSourceRawOutput) ToFileSourceRawOutput() FileSourceRawOutput {
	return o
}

func (o FileSourceRawOutput) ToFileSourceRawOutputWithContext(ctx context.Context) FileSourceRawOutput {
	return o
}

func (o FileSourceRawOutput) ToOutput(ctx context.Context) pulumix.Output[FileSourceRaw] {
	return pulumix.Output[FileSourceRaw]{
		OutputState: o.OutputState,
	}
}

// The raw data in []byte
func (o FileSourceRawOutput) FileData() pulumix.Output[string] {
	return pulumix.Apply[FileSourceRaw](o, func(v FileSourceRaw) string { return v.FileData })
}

// The name of the file
func (o FileSourceRawOutput) FileName() pulumix.Output[string] {
	return pulumix.Apply[FileSourceRaw](o, func(v FileSourceRaw) string { return v.FileName })
}

func init() {
	pulumi.RegisterOutputType(FileSourceRawOutput{})
}
