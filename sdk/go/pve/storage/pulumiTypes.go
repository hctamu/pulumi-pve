// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/hctamu/pulumi-pve/sdk/go/pve/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type FileSourceRaw struct {
	// The raw data in []byte
	FileData string `pulumi:"fileData"`
	// The name of the file
	FileName string `pulumi:"fileName"`
}

// FileSourceRawInput is an input type that accepts FileSourceRawArgs and FileSourceRawOutput values.
// You can construct a concrete instance of `FileSourceRawInput` via:
//
//	FileSourceRawArgs{...}
type FileSourceRawInput interface {
	pulumi.Input

	ToFileSourceRawOutput() FileSourceRawOutput
	ToFileSourceRawOutputWithContext(context.Context) FileSourceRawOutput
}

type FileSourceRawArgs struct {
	// The raw data in []byte
	FileData pulumi.StringInput `pulumi:"fileData"`
	// The name of the file
	FileName pulumi.StringInput `pulumi:"fileName"`
}

func (FileSourceRawArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSourceRaw)(nil)).Elem()
}

func (i FileSourceRawArgs) ToFileSourceRawOutput() FileSourceRawOutput {
	return i.ToFileSourceRawOutputWithContext(context.Background())
}

func (i FileSourceRawArgs) ToFileSourceRawOutputWithContext(ctx context.Context) FileSourceRawOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSourceRawOutput)
}

type FileSourceRawOutput struct{ *pulumi.OutputState }

func (FileSourceRawOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSourceRaw)(nil)).Elem()
}

func (o FileSourceRawOutput) ToFileSourceRawOutput() FileSourceRawOutput {
	return o
}

func (o FileSourceRawOutput) ToFileSourceRawOutputWithContext(ctx context.Context) FileSourceRawOutput {
	return o
}

// The raw data in []byte
func (o FileSourceRawOutput) FileData() pulumi.StringOutput {
	return o.ApplyT(func(v FileSourceRaw) string { return v.FileData }).(pulumi.StringOutput)
}

// The name of the file
func (o FileSourceRawOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v FileSourceRaw) string { return v.FileName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FileSourceRawInput)(nil)).Elem(), FileSourceRawArgs{})
	pulumi.RegisterOutputType(FileSourceRawOutput{})
}
