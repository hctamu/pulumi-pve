// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Hctamu.Pve
{
    [PveResourceType("pulumi:providers:pve")]
    public partial class Provider : global::Pulumi.ProviderResource
    {
        [Output("pveToken")]
        public Output<string> PveToken { get; private set; } = null!;

        [Output("pveUrl")]
        public Output<string> PveUrl { get; private set; } = null!;

        [Output("pveUser")]
        public Output<string> PveUser { get; private set; } = null!;

        [Output("sshPass")]
        public Output<string> SshPass { get; private set; } = null!;

        [Output("sshUser")]
        public Output<string> SshUser { get; private set; } = null!;


        /// <summary>
        /// Create a Provider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Provider(string name, ProviderArgs args, CustomResourceOptions? options = null)
            : base("pve", name, args ?? new ProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "pveToken",
                    "sshPass",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class ProviderArgs : global::Pulumi.ResourceArgs
    {
        [Input("pveToken", required: true)]
        private Input<string>? _pveToken;
        public Input<string>? PveToken
        {
            get => _pveToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _pveToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("pveUrl", required: true)]
        public Input<string> PveUrl { get; set; } = null!;

        [Input("pveUser", required: true)]
        public Input<string> PveUser { get; set; } = null!;

        [Input("sshPass", required: true)]
        private Input<string>? _sshPass;
        public Input<string>? SshPass
        {
            get => _sshPass;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sshPass = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("sshUser", required: true)]
        public Input<string> SshUser { get; set; } = null!;

        public ProviderArgs()
        {
        }
        public static new ProviderArgs Empty => new ProviderArgs();
    }
}
