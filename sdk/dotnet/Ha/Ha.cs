// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Hctamu.Pve.Ha
{
    /// <summary>
    /// A Proxmox HA resource that manages the HA configuration of a virtual machine in the Proxmox VE.
    /// </summary>
    [PveResourceType("pve:ha:Ha")]
    public partial class Ha : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The HA group identifier.
        /// </summary>
        [Output("group")]
        public Output<string?> Group { get; private set; } = null!;

        /// <summary>
        /// The ID of the virtual machine that will be managed by HA (required).
        /// </summary>
        [Output("resourceId")]
        public Output<int> ResourceId { get; private set; } = null!;

        /// <summary>
        /// The state of the HA resource (default: started).
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;


        /// <summary>
        /// Create a Ha resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ha(string name, HaArgs args, CustomResourceOptions? options = null)
            : base("pve:ha:Ha", name, args ?? new HaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ha(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("pve:ha:Ha", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ha resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ha Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Ha(name, id, options);
        }
    }

    public sealed class HaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The HA group identifier.
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        /// <summary>
        /// The ID of the virtual machine that will be managed by HA (required).
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<int> ResourceId { get; set; } = null!;

        /// <summary>
        /// The state of the HA resource (default: started).
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public HaArgs()
        {
            State = "started";
        }
        public static new HaArgs Empty => new HaArgs();
    }
}
