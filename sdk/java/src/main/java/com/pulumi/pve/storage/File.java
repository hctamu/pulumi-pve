// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pve.storage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.pve.Utilities;
import com.pulumi.pve.storage.FileArgs;
import com.pulumi.pve.storage.outputs.FileSourceRaw;
import java.lang.String;
import javax.annotation.Nullable;

@ResourceType(type="pve:storage:File")
public class File extends com.pulumi.resources.CustomResource {
    /**
     * The type of the file (e.g: snippets)
     * 
     */
    @Export(name="contentType", refs={String.class}, tree="[0]")
    private Output<String> contentType;

    /**
     * @return The type of the file (e.g: snippets)
     * 
     */
    public Output<String> contentType() {
        return this.contentType;
    }
    /**
     * The datastore to upload the file to.  (e.g:ceph-ha)
     * 
     */
    @Export(name="datastoreId", refs={String.class}, tree="[0]")
    private Output<String> datastoreId;

    /**
     * @return The datastore to upload the file to.  (e.g:ceph-ha)
     * 
     */
    public Output<String> datastoreId() {
        return this.datastoreId;
    }
    /**
     * The raw source data
     * 
     */
    @Export(name="sourceRaw", refs={FileSourceRaw.class}, tree="[0]")
    private Output<FileSourceRaw> sourceRaw;

    /**
     * @return The raw source data
     * 
     */
    public Output<FileSourceRaw> sourceRaw() {
        return this.sourceRaw;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public File(java.lang.String name) {
        this(name, FileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public File(java.lang.String name, FileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public File(java.lang.String name, FileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("pve:storage:File", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private File(java.lang.String name, Output<java.lang.String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("pve:storage:File", name, null, makeResourceOptions(options, id), false);
    }

    private static FileArgs makeArgs(FileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FileArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static File get(java.lang.String name, Output<java.lang.String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new File(name, id, options);
    }
}
