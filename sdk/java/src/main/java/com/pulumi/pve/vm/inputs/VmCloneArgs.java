// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pve.vm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VmCloneArgs extends com.pulumi.resources.ResourceArgs {

    public static final VmCloneArgs Empty = new VmCloneArgs();

    @Import(name="dataStoreId")
    private @Nullable Output<String> dataStoreId;

    public Optional<Output<String>> dataStoreId() {
        return Optional.ofNullable(this.dataStoreId);
    }

    @Import(name="fullClone")
    private @Nullable Output<Boolean> fullClone;

    public Optional<Output<Boolean>> fullClone() {
        return Optional.ofNullable(this.fullClone);
    }

    @Import(name="node")
    private @Nullable Output<String> node;

    public Optional<Output<String>> node() {
        return Optional.ofNullable(this.node);
    }

    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    @Import(name="vmId", required=true)
    private Output<Integer> vmId;

    public Output<Integer> vmId() {
        return this.vmId;
    }

    private VmCloneArgs() {}

    private VmCloneArgs(VmCloneArgs $) {
        this.dataStoreId = $.dataStoreId;
        this.fullClone = $.fullClone;
        this.node = $.node;
        this.timeout = $.timeout;
        this.vmId = $.vmId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VmCloneArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VmCloneArgs $;

        public Builder() {
            $ = new VmCloneArgs();
        }

        public Builder(VmCloneArgs defaults) {
            $ = new VmCloneArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataStoreId(@Nullable Output<String> dataStoreId) {
            $.dataStoreId = dataStoreId;
            return this;
        }

        public Builder dataStoreId(String dataStoreId) {
            return dataStoreId(Output.of(dataStoreId));
        }

        public Builder fullClone(@Nullable Output<Boolean> fullClone) {
            $.fullClone = fullClone;
            return this;
        }

        public Builder fullClone(Boolean fullClone) {
            return fullClone(Output.of(fullClone));
        }

        public Builder node(@Nullable Output<String> node) {
            $.node = node;
            return this;
        }

        public Builder node(String node) {
            return node(Output.of(node));
        }

        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        public Builder vmId(Output<Integer> vmId) {
            $.vmId = vmId;
            return this;
        }

        public Builder vmId(Integer vmId) {
            return vmId(Output.of(vmId));
        }

        public VmCloneArgs build() {
            if ($.vmId == null) {
                throw new MissingRequiredPropertyException("VmCloneArgs", "vmId");
            }
            return $;
        }
    }

}
