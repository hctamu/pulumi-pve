// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.github.hctamu.pve.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FileSourceRawArgs extends com.pulumi.resources.ResourceArgs {

    public static final FileSourceRawArgs Empty = new FileSourceRawArgs();

    /**
     * The raw data in []byte
     * 
     */
    @Import(name="fileData", required=true)
    private Output<String> fileData;

    /**
     * @return The raw data in []byte
     * 
     */
    public Output<String> fileData() {
        return this.fileData;
    }

    /**
     * The name of the file
     * 
     */
    @Import(name="fileName", required=true)
    private Output<String> fileName;

    /**
     * @return The name of the file
     * 
     */
    public Output<String> fileName() {
        return this.fileName;
    }

    private FileSourceRawArgs() {}

    private FileSourceRawArgs(FileSourceRawArgs $) {
        this.fileData = $.fileData;
        this.fileName = $.fileName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileSourceRawArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileSourceRawArgs $;

        public Builder() {
            $ = new FileSourceRawArgs();
        }

        public Builder(FileSourceRawArgs defaults) {
            $ = new FileSourceRawArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fileData The raw data in []byte
         * 
         * @return builder
         * 
         */
        public Builder fileData(Output<String> fileData) {
            $.fileData = fileData;
            return this;
        }

        /**
         * @param fileData The raw data in []byte
         * 
         * @return builder
         * 
         */
        public Builder fileData(String fileData) {
            return fileData(Output.of(fileData));
        }

        /**
         * @param fileName The name of the file
         * 
         * @return builder
         * 
         */
        public Builder fileName(Output<String> fileName) {
            $.fileName = fileName;
            return this;
        }

        /**
         * @param fileName The name of the file
         * 
         * @return builder
         * 
         */
        public Builder fileName(String fileName) {
            return fileName(Output.of(fileName));
        }

        public FileSourceRawArgs build() {
            if ($.fileData == null) {
                throw new MissingRequiredPropertyException("FileSourceRawArgs", "fileData");
            }
            if ($.fileName == null) {
                throw new MissingRequiredPropertyException("FileSourceRawArgs", "fileName");
            }
            return $;
        }
    }

}
